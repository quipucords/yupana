# Generated by Django 2.2.2 on 2019-06-26 17:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryUploadError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_platform_id', models.UUIDField()),
                ('report_slice_id', models.UUIDField()),
                ('account', models.CharField(max_length=50)),
                ('source', models.CharField(max_length=15)),
                ('upload_type', models.CharField(choices=[('http', 'http'), ('kafka', 'kafka')], max_length=10)),
                ('details', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_platform_id', models.UUIDField(null=True)),
                ('host_inventory_api_version', models.CharField(max_length=10, null=True)),
                ('source', models.CharField(max_length=15, null=True)),
                ('source_metadata', models.TextField(null=True)),
                ('account', models.CharField(max_length=50, null=True)),
                ('upload_ack_status', models.CharField(max_length=10, null=True)),
                ('upload_srv_kafka_msg', models.TextField(null=True)),
                ('git_commit', models.CharField(max_length=50, null=True)),
                ('ready_to_archive', models.BooleanField(default=False)),
                ('state', models.CharField(choices=[('new', 'new'), ('started', 'started'), ('downloaded', 'downloaded'), ('failed to download', 'failed to download'), ('validated', 'validated'), ('failed validation', 'failed validation'), ('validation reported', 'validation reported'), ('failed to report validation', 'failed to report validation')], default='new', max_length=28)),
                ('retry_type', models.CharField(choices=[('time', 'time'), ('git commit', 'git commit')], default='time', max_length=10)),
                ('state_info', models.TextField(null=True)),
                ('retry_count', models.PositiveSmallIntegerField(null=True)),
                ('last_update_time', models.DateTimeField(null=True)),
                ('arrival_time', models.DateTimeField(null=True)),
                ('processing_start_time', models.DateTimeField(null=True)),
                ('processing_end_time', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_platform_id', models.UUIDField(null=True)),
                ('host_inventory_api_version', models.CharField(max_length=10, null=True)),
                ('source', models.CharField(max_length=15, null=True)),
                ('source_metadata', models.TextField(null=True)),
                ('account', models.CharField(max_length=50, null=True)),
                ('upload_ack_status', models.CharField(max_length=10, null=True)),
                ('upload_srv_kafka_msg', models.TextField(null=True)),
                ('git_commit', models.CharField(max_length=50, null=True)),
                ('ready_to_archive', models.BooleanField(default=False)),
                ('state', models.CharField(choices=[('new', 'new'), ('started', 'started'), ('downloaded', 'downloaded'), ('failed to download', 'failed to download'), ('validated', 'validated'), ('failed validation', 'failed validation'), ('validation reported', 'validation reported'), ('failed to report validation', 'failed to report validation')], default='new', max_length=28)),
                ('retry_type', models.CharField(choices=[('time', 'time'), ('git commit', 'git commit')], default='time', max_length=10)),
                ('state_info', models.TextField(null=True)),
                ('retry_count', models.PositiveSmallIntegerField(null=True)),
                ('last_update_time', models.DateTimeField(null=True)),
                ('arrival_time', models.DateTimeField(null=True)),
                ('processing_start_time', models.DateTimeField(null=True)),
                ('processing_end_time', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportSliceArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_platform_id', models.UUIDField(null=True)),
                ('report_slice_id', models.UUIDField(null=True)),
                ('account', models.CharField(max_length=50, null=True)),
                ('report_json', models.TextField(null=True)),
                ('git_commit', models.CharField(max_length=50, null=True)),
                ('ready_to_archive', models.BooleanField(default=False)),
                ('source', models.CharField(max_length=15)),
                ('state', models.CharField(choices=[('pending', 'pending'), ('new', 'new'), ('retry_validation', 'retry_validation'), ('failed_validation', 'failed_validation'), ('validated', 'validated'), ('started', 'started'), ('hosts uploaded', 'hosts uploaded'), ('failed to upload hosts', 'failed to upload hosts')], default='new', max_length=28)),
                ('retry_type', models.CharField(choices=[('time', 'time'), ('git commit', 'git commit')], default='time', max_length=10)),
                ('state_info', models.TextField(null=True)),
                ('retry_count', models.PositiveSmallIntegerField(null=True)),
                ('last_update_time', models.DateTimeField(null=True)),
                ('failed_hosts', models.TextField(null=True)),
                ('candidate_hosts', models.TextField(null=True)),
                ('hosts_count', models.PositiveIntegerField()),
                ('creation_time', models.DateTimeField(null=True)),
                ('processing_start_time', models.DateTimeField(null=True)),
                ('processing_end_time', models.DateTimeField(null=True)),
                ('report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.ReportArchive')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportSlice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_platform_id', models.UUIDField(null=True)),
                ('report_slice_id', models.UUIDField(null=True)),
                ('account', models.CharField(max_length=50, null=True)),
                ('report_json', models.TextField(null=True)),
                ('git_commit', models.CharField(max_length=50, null=True)),
                ('ready_to_archive', models.BooleanField(default=False)),
                ('source', models.CharField(max_length=15)),
                ('state', models.CharField(choices=[('pending', 'pending'), ('new', 'new'), ('retry_validation', 'retry_validation'), ('failed_validation', 'failed_validation'), ('validated', 'validated'), ('started', 'started'), ('hosts uploaded', 'hosts uploaded'), ('failed to upload hosts', 'failed to upload hosts')], default='new', max_length=28)),
                ('retry_type', models.CharField(choices=[('time', 'time'), ('git commit', 'git commit')], default='time', max_length=10)),
                ('state_info', models.TextField(null=True)),
                ('retry_count', models.PositiveSmallIntegerField(null=True)),
                ('last_update_time', models.DateTimeField(null=True)),
                ('failed_hosts', models.TextField(null=True)),
                ('candidate_hosts', models.TextField(null=True)),
                ('hosts_count', models.PositiveIntegerField()),
                ('creation_time', models.DateTimeField(null=True)),
                ('processing_start_time', models.DateTimeField(null=True)),
                ('processing_end_time', models.DateTimeField(null=True)),
                ('report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Report')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
