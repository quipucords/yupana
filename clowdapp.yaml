---
apiVersion: v1
kind: Template
metadata:
  name: subscriptions
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: subscriptions
  spec:
    envName: ${ENV_NAME}
    dependencies:
    - ingress
    deployments:
    - name: yupana-service
      webServices:
        public:
          enabled: true
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: ${{MIN_REPLICAS}}
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/subscriptions/v1/status/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /api/subscriptions/v1/status/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        env:
          - name: PATH_PREFIX
            value: /api
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
    database: #FIXME
      name: subscriptions
      version: 12
    kafkaTopics:
      - topicName: platform.upload.announce
        partitions: 1
      - topicName: platform.inventory.host-ingress
        partitions: 1
      - topicName: platform.upload.validation
        partitions: 1
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: subscriptions-db-cleaner-config
  data:
    clean.sh: |
      cat /subscriptions-db-cleaner/clean.sql | psql > /dev/null
    clean.sql: |
      DELETE FROM api_reportslicearchive;
      DELETE FROM api_reportarchive;
      DELETE FROM api_reportslice;
      DELETE FROM api_report;
- apiVersion: batch/v1
  kind: CronJob
  metadata:
    name: subscriptions-db-cleaner-cronjob
  spec:
    schedule: ${DB_CLEANER_SCHEDULE}
    suspend: ${{DISABLE_DB_CLEANER}}
    concurrencyPolicy: Forbid
    jobTemplate:
      spec:
        template:
          spec:
            restartPolicy: Never
            volumes:
            - name: subscriptions-db-cleaner-volume
              configMap:
                name: subscriptions-db-cleaner-config
            containers:
            - name: subscriptions-db-cleaner
              image: quay.io/cloudservices/postgresql-rds:12-1
              restartPolicy: Never
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 200m
                  memory: 200Mi
              volumeMounts:
              - name: subscriptions-db-cleaner-volume
                mountPath: /subscriptions-db-cleaner
              command: ['sh', '/subscriptions-db-cleaner/clean.sh']
              env:
              - name: PGHOST
                valueFrom:
                  secretKeyRef:
                    name: subscriptions
                    key: ${DB_SECRET_HOSTNAME_KEY}
              - name: PGDATABASE
                value: ${DB_NAME}
              - name: PGUSER
                valueFrom:
                  secretKeyRef:
                    name: subscriptions
                    key: ${DB_SECRET_USERNAME_KEY}
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    name: subscriptions
                    key: ${DB_SECRET_PASSWORD_KEY}
parameters:
- description : ClowdEnvironment name
  name: ENV_NAME
  required: true
- description: min replicas
  name: MIN_REPLICAS
  value: "1"
- description: Image NAME
  name: IMAGE
  required: true
  value: quay.io/cloudservices/yupana
- description: Image tag
  name: IMAGE_TAG
  required: true
- name: DB_CLEANER_SCHEDULE
  description: Execution time specified in cron format
  value: "*/10 * * * *"
- name: DB_NAME
  description: Database name used by the notifications-db-cleaner CronJob
  value: notifications_backend
- name: DB_SECRET_HOSTNAME_KEY
  description: Key of the hostname field in the notifications-backend-db secret
  value: db.host
- name: DB_SECRET_PASSWORD_KEY
  description: Key of the password field in the notifications-backend-db secret
  value: db.password
- name: DB_SECRET_USERNAME_KEY
  description: Key of the username field in the notifications-backend-db secret
  value: db.user
- name: DISABLE_DB_CLEANER
  description: Should the DB cleaner CronJob be disabled?
  value: "false"
- description: Initial cpu request.
  displayName: CPU Request
  name: CPU_REQUEST
  required: true
  value: 500m
- description: Initial amount of memory the container will request.
  displayName: Memory Request
  name: MEMORY_REQUEST
  required: true
  value: 1Gi
- description: Maximum amount of memory the Django container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 1Gi
- description: Maximum amount of CPU the build container can use.
  displayName: CPU Limit
  name: CPU_LIMIT
  required: true
  value: '1'
- description: Is clowder enabled
  name: CLOWDER_ENABLED
  value: "True"

